//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.Entity.Infrastructure.Annotations;

namespace IdentitySample.Models
{
   /// <summary>
   /// Represents a class that uses the default entity types for ASP.NET Identity Users,
   /// Roles, Claims, Logins
   /// </summary>
   public partial class ApplicationDbContext : Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole<Int64, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole<Int64>>, Int64, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin<Int64>, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole<Int64>, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim<Int64>>
   {
      #region DbSets
      public virtual System.Data.Entity.DbSet<global::IdentitySample.Models.ApplicationUser> ApplicationUsers { get; set; }
      #endregion DbSets

      #region Constructors

      partial void CustomInit();

      /// <summary>
      /// Default connection string
      /// </summary>
      public static string ConnectionString { get; set; } = @"Name=DefaultConnection";
      /// <inheritdoc />
      public ApplicationDbContext() : base(ConnectionString)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      /// <inheritdoc />
      public ApplicationDbContext(string connectionString) : base(connectionString)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      /// <inheritdoc />
      public ApplicationDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection) : base(existingConnection, model, contextOwnsConnection)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      /// <inheritdoc />
      public ApplicationDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model) : base(connectionString, model)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      /// <inheritdoc />
      public ApplicationDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection) : base(existingConnection, contextOwnsConnection)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      /// <inheritdoc />
      public ApplicationDbContext(System.Data.Entity.Infrastructure.DbCompiledModel model) : base(model)
      {
         Configuration.LazyLoadingEnabled = true;
         Configuration.ProxyCreationEnabled = true;
         System.Data.Entity.Database.SetInitializer<ApplicationDbContext>(new ApplicationDbContextDatabaseInitializer());
         CustomInit();
      }

      #endregion Constructors

      partial void OnModelCreatingImpl(System.Data.Entity.DbModelBuilder modelBuilder);
      partial void OnModelCreatedImpl(System.Data.Entity.DbModelBuilder modelBuilder);

      /// <inheritdoc />
      protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);
         OnModelCreatingImpl(modelBuilder);

         modelBuilder.HasDefaultSchema("dbo");

         modelBuilder.Entity<global::IdentitySample.Models.ApplicationUser>()
                     .ToTable("ApplicationUsers");
         modelBuilder.Entity<global::IdentitySample.Models.ApplicationUser>()
                     .Property(t => t.Address)
                     .HasMaxLength(250);
         modelBuilder.Entity<global::IdentitySample.Models.ApplicationUser>()
                     .Property(t => t.City)
                     .HasMaxLength(250);
         modelBuilder.Entity<global::IdentitySample.Models.ApplicationUser>()
                     .Property(t => t.State)
                     .HasMaxLength(2);
         modelBuilder.Entity<global::IdentitySample.Models.ApplicationUser>()
                     .Property(t => t.Zip)
                     .HasMaxLength(10);

         OnModelCreatedImpl(modelBuilder);
      }
   }
}
