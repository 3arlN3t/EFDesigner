//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Data.Entity.Spatial;

namespace Testing
{
   public partial class ParserTest
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected ParserTest()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static ParserTest CreateParserTestUnsafe()
      {
         return new ParserTest();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="foo"></param>
      public ParserTest(long foo)
      {
         this.foo = foo;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="foo"></param>
      public static ParserTest Create(long foo)
      {
         return new ParserTest(foo);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Backing field for Id
      /// </summary>
      protected int ;
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before setting.
      /// </summary>
      partial void SetId(int oldValue, ref int newValue);
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before returning.
      /// </summary>
      partial void GetId(ref int result);

      /// <summary>
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id
      {
         get
         {
            int value = ;
            GetId(ref value);
            return ( = value);
         }
         protected set
         {
            int oldValue = ;
            SetId(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for foo
      /// </summary>
      protected long ;
      /// <summary>
      /// When provided in a partial class, allows value of foo to be changed before setting.
      /// </summary>
      partial void Setfoo(long oldValue, ref long newValue);
      /// <summary>
      /// When provided in a partial class, allows value of foo to be changed before returning.
      /// </summary>
      partial void Getfoo(ref long result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public long foo
      {
         get
         {
            long value = ;
            Getfoo(ref value);
            return ( = value);
         }
         set
         {
            long oldValue = ;
            Setfoo(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name1
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name1 to be changed before setting.
      /// </summary>
      partial void Setname1(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name1 to be changed before returning.
      /// </summary>
      partial void Getname1(ref string result);

      public string name1
      {
         get
         {
            string value = ;
            Getname1(ref value);
            return ( = value);
         }
         set
         {
            string oldValue = ;
            Setname1(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name2
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name2 to be changed before setting.
      /// </summary>
      partial void Setname2(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name2 to be changed before returning.
      /// </summary>
      partial void Getname2(ref string result);

      public string name2
      {
         get
         {
            string value = ;
            Getname2(ref value);
            return ( = value);
         }
         protected set
         {
            string oldValue = ;
            Setname2(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name3
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name3 to be changed before setting.
      /// </summary>
      partial void Setname3(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name3 to be changed before returning.
      /// </summary>
      partial void Getname3(ref int? result);

      public int? name3
      {
         get
         {
            int? value = ;
            Getname3(ref value);
            return ( = value);
         }
         set
         {
            int? oldValue = ;
            Setname3(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name4
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name4 to be changed before setting.
      /// </summary>
      partial void Setname4(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name4 to be changed before returning.
      /// </summary>
      partial void Getname4(ref int? result);

      public int? name4
      {
         get
         {
            int? value = ;
            Getname4(ref value);
            return ( = value);
         }
         protected set
         {
            int? oldValue = ;
            Setname4(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name5
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name5 to be changed before setting.
      /// </summary>
      partial void Setname5(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name5 to be changed before returning.
      /// </summary>
      partial void Getname5(ref int? result);

      public int? name5
      {
         get
         {
            int? value = ;
            Getname5(ref value);
            return ( = value);
         }
         set
         {
            int? oldValue = ;
            Setname5(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name6
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name6 to be changed before setting.
      /// </summary>
      partial void Setname6(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name6 to be changed before returning.
      /// </summary>
      partial void Getname6(ref int? result);

      public int? name6
      {
         get
         {
            int? value = ;
            Getname6(ref value);
            return ( = value);
         }
         protected set
         {
            int? oldValue = ;
            Setname6(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name7
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name7 to be changed before setting.
      /// </summary>
      partial void Setname7(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name7 to be changed before returning.
      /// </summary>
      partial void Getname7(ref string result);

      public string name7
      {
         get
         {
            string value = ;
            Getname7(ref value);
            return ( = value);
         }
         set
         {
            string oldValue = ;
            Setname7(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name8
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name8 to be changed before setting.
      /// </summary>
      partial void Setname8(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name8 to be changed before returning.
      /// </summary>
      partial void Getname8(ref string result);

      public string name8
      {
         get
         {
            string value = ;
            Getname8(ref value);
            return ( = value);
         }
         protected set
         {
            string oldValue = ;
            Setname8(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name9
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name9 to be changed before setting.
      /// </summary>
      partial void Setname9(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name9 to be changed before returning.
      /// </summary>
      partial void Getname9(ref string result);

      public string name9
      {
         get
         {
            string value = ;
            Getname9(ref value);
            return ( = value);
         }
         set
         {
            string oldValue = ;
            Setname9(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name to be changed before setting.
      /// </summary>
      partial void Setname(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name to be changed before returning.
      /// </summary>
      partial void Getname(ref string result);

      public string name
      {
         get
         {
            string value = ;
            Getname(ref value);
            return ( = value);
         }
         protected set
         {
            string oldValue = ;
            Setname(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name11
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name11 to be changed before setting.
      /// </summary>
      partial void Setname11(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name11 to be changed before returning.
      /// </summary>
      partial void Getname11(ref int? result);

      public int? name11
      {
         get
         {
            int? value = ;
            Getname11(ref value);
            return ( = value);
         }
         set
         {
            int? oldValue = ;
            Setname11(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name12
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name12 to be changed before setting.
      /// </summary>
      partial void Setname12(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name12 to be changed before returning.
      /// </summary>
      partial void Getname12(ref int? result);

      public int? name12
      {
         get
         {
            int? value = ;
            Getname12(ref value);
            return ( = value);
         }
         protected set
         {
            int? oldValue = ;
            Setname12(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name13
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name13 to be changed before setting.
      /// </summary>
      partial void Setname13(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name13 to be changed before returning.
      /// </summary>
      partial void Getname13(ref int? result);

      public int? name13
      {
         get
         {
            int? value = ;
            Getname13(ref value);
            return ( = value);
         }
         set
         {
            int? oldValue = ;
            Setname13(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name14
      /// </summary>
      protected int? ;
      /// <summary>
      /// When provided in a partial class, allows value of name14 to be changed before setting.
      /// </summary>
      partial void Setname14(int? oldValue, ref int? newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name14 to be changed before returning.
      /// </summary>
      partial void Getname14(ref int? result);

      public int? name14
      {
         get
         {
            int? value = ;
            Getname14(ref value);
            return ( = value);
         }
         protected set
         {
            int? oldValue = ;
            Setname14(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name15
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name15 to be changed before setting.
      /// </summary>
      partial void Setname15(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name15 to be changed before returning.
      /// </summary>
      partial void Getname15(ref string result);

      public string name15
      {
         get
         {
            string value = ;
            Getname15(ref value);
            return ( = value);
         }
         set
         {
            string oldValue = ;
            Setname15(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name16
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name16 to be changed before setting.
      /// </summary>
      partial void Setname16(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name16 to be changed before returning.
      /// </summary>
      partial void Getname16(ref string result);

      public string name16
      {
         get
         {
            string value = ;
            Getname16(ref value);
            return ( = value);
         }
         protected set
         {
            string oldValue = ;
            Setname16(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name17
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name17 to be changed before setting.
      /// </summary>
      partial void Setname17(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name17 to be changed before returning.
      /// </summary>
      partial void Getname17(ref string result);

      public string name17
      {
         get
         {
            string value = ;
            Getname17(ref value);
            return ( = value);
         }
         set
         {
            string oldValue = ;
            Setname17(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

      /// <summary>
      /// Backing field for name18
      /// </summary>
      protected string ;
      /// <summary>
      /// When provided in a partial class, allows value of name18 to be changed before setting.
      /// </summary>
      partial void Setname18(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of name18 to be changed before returning.
      /// </summary>
      partial void Getname18(ref string result);

      public string name18
      {
         get
         {
            string value = ;
            Getname18(ref value);
            return ( = value);
         }
         protected set
         {
            string oldValue = ;
            Setname18(oldValue, ref value);
            if (oldValue != value)
            {
                = value;
            }
         }
      }

   }
}

