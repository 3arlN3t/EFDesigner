//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Sandbox
{
   public partial class Entity2
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Entity2()
      {
         Entity1 = new System.Collections.Generic.HashSet<Sandbox.Entity1>();

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="_entity10"></param>
      public Entity2(Sandbox.Entity1 _entity10)
      {
         if (_entity10 == null) throw new ArgumentNullException(nameof(_entity10));
         _entity10.Entity2.Add(this);

         Entity1 = new HashSet<Sandbox.Entity1>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="_entity10"></param>
      public static Entity2 Create(Sandbox.Entity1 _entity10)
      {
         return new Entity2(_entity10);
      }

      // Persistent properties

      /// <summary>
      /// Identity, Required, Indexed
      /// </summary>
      [Key]
      [Required]
      public int Id { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      [ConcurrencyCheck]
      public byte[] Timestamp { get; set; }

      // Persistent navigation properties

      public virtual ICollection<Sandbox.Entity1> Entity1 { get; set; }

   }
}

