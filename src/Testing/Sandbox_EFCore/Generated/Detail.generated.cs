//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Sandbox_EF6
{
   public partial class Detail: global::Sandbox_EF6.BaseClass
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Detail(): base()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="_master0"></param>
      public Detail(global::Sandbox_EF6.Master _master0)
      {
         if (_master0 == null) throw new ArgumentNullException(nameof(_master0));
         _master0.Details.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="_master0"></param>
      public static Detail Create(global::Sandbox_EF6.Master _master0)
      {
         return new Detail(_master0);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Backing field for StringMax
      /// </summary>
      protected string _StringMax;
      /// <summary>
      /// When provided in a partial class, allows value of StringMax to be changed before setting.
      /// </summary>
      partial void SetStringMax(string oldValue, ref string newValue);
      /// <summary>
      /// When provided in a partial class, allows value of StringMax to be changed before returning.
      /// </summary>
      partial void GetStringMax(ref string result);

      public string StringMax
      {
         get
         {
            string value = _StringMax;
            GetStringMax(ref value);
            return (_StringMax = value);
         }
         set
         {
            string oldValue = _StringMax;
            SetStringMax(oldValue, ref value);
            if (oldValue != value)
            {
               _StringMax = value;
            }
         }
      }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

   }
}

