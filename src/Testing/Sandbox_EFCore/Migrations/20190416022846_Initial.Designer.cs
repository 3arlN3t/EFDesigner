// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sandbox_EFCore;

namespace Sandbox_EFCore.Migrations
{
    [DbContext(typeof(EFModel))]
    [Migration("20190416022846_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sandbox_EFCore.Sandbox_EFCore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.ToTable("Sandbox_EFCore");
                });

            modelBuilder.Entity("Sandbox_EFCore.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Property1");

                    b.Property<long>("Sandbox_EFCore_Role_Id");

                    b.HasKey("Id");

                    b.HasIndex("Property1");

                    b.HasIndex("Sandbox_EFCore_Role_Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Sandbox_EFCore.User", b =>
                {
                    b.HasOne("Sandbox_EFCore.Sandbox_EFCore", "Role")
                        .WithOne()
                        .HasForeignKey("Sandbox_EFCore.User", "Sandbox_EFCore_Role_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
