<Query Kind="Program">
  <Output>DataGrids</Output>
</Query>

void Main()
{

	string[] inputs = {
		 "foo : int",
		 "foo : string",
		 "foo : string?",
		 "foo : string?(0-50)",
		 "foo : string?(0-50)= \"hello\"",
		 "foo : string?(50)",
		 "foo : string?(50)= \"hello\"",
		 "foo : string?(50-0)",
		 "foo : string?(50-0)= \"hello\"",
		 "foo : string?[0-50]",
		 "foo : string?[0-50]= \"hello\"",
		 "foo : string?[50-0]",
		 "foo : string?[50-0]= \"hello\"",
		 "foo : string?[50]",
		 "foo : string?[50]= \"hello\"",
		 "foo! : int = 12",
		 "foo! : int",
		 "foo",
		 "int foo! = 12",
		 "int foo!",
		 "int foo",
		 "public foo : int = 12",
		 "public foo : int",
		 "public foo : string",
		 "public foo : string(0-50)",
		 "public foo : string(0-50)= \"hello\"",
		 "public foo : string(50)",
		 "public foo : string(50)= \"hello\"",
		 "public foo : string(50-0)",
		 "public foo : string(50-0)= \"hello\"",
		 "public foo : string?",
		 "public foo : string?(0-50)",
		 "public foo : string?(0-50)= \"hello\"",
		 "public foo : string?(50)",
		 "public foo : string?(50)= \"hello\"",
		 "public foo : string?(50-0)",
		 "public foo : string?(50-0)= \"hello\"",
		 "public foo : string?= \"hello\"",
		 "public foo : string?[0-50]",
		 "public foo : string?[0-50]= \"hello\"",
		 "public foo : string?[50-0]",
		 "public foo : string?[50-0]= \"hello\"",
		 "public foo : string?[50]",
		 "public foo : string?[50]= \"hello\"",
		 "public foo : string[0-50]",
		 "public foo : string[0-50]= \"hello\"",
		 "public foo : string[50-0]",
		 "public foo : string[50-0]= \"hello\"",
		 "public foo : string[50]",
		 "public foo : string[50]= \"hello\"",
		 "public foo = \"hello\"",
		 "public foo = \"hello\"",
		 "public foo! : int = 12",
		 "public foo! : int",
		 "public foo! = 12",
		 "public foo! = 12",
		 "public foo!",
		 "public foo",
		 "public int foo = 12",
		 "public int foo! = 12",
		 "public int foo!",
		 "public int foo",
		 "public string foo",
		 "public string(0-50) foo = \"hello\"",
		 "public string(0-50) foo",
		 "public string(50) foo = \"hello\"",
		 "public string(50) foo",
		 "public string(50-0) foo = \"hello\"",
		 "public string(50-0) foo",
		 "public string? foo = \"hello\"",
		 "public string? foo",
		 "public string?(0-50) foo = \"hello\"",
		 "public string?(0-50) foo",
		 "public string?(50) foo = \"hello\"",
		 "public string?(50) foo",
		 "public string?(50-0) foo = \"hello\"",
		 "public string?(50-0) foo",
		 "public string?[0-50] foo = \"hello\"",
		 "public string?[0-50] foo",
		 "public string?[50-0] foo = \"hello\"",
		 "public string?[50-0] foo",
		 "public string?[50] foo = \"hello\"",
		 "public string?[50] foo",
		 "public string[0-50] foo = \"hello\"",
		 "public string[0-50] foo",
		 "public string[50-0] foo = \"hello\"",
		 "public string[50-0] foo",
		 "public string[50] foo = \"hello\"",
		 "public string[50] foo",
		 "string foo",
		 "string? foo",
		 "string?(0-50) foo = \"hello\"",
		 "string?(0-50) foo",
		 "string?(50) foo = \"hello\"",
		 "string?(50) foo",
		 "string?(50-0) foo = \"hello\"",
		 "string?(50-0) foo",
		 "string?[0-50] foo = \"hello\"",
		 "string?[0-50] foo",
		 "string?[50-0] foo = \"hello\"",
		 "string?[50-0] foo",
		 "string?[50] foo = \"hello\"",
		 "string?[50] foo"
	  };

	int index = 0;
	foreach (string s in inputs)
	{
		using (StreamWriter sw = File.CreateText($@"c:\temp\inputs\{++index}.txt"))
		{
			sw.Write(s);
			sw.Flush();
			sw.Close();
		}
	}
}

// Define other methods and classes here
